<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.MemberMapper">
	
	<resultMap type="org.zerock.domain.MemberVO" id="memberMap">
		<id property="userid" column="userid"/>
		<result property="userid" column="userid"/>
		<result property="userpw" column="userpw"/>
		<result property="userName" column="userName"/>
		<result property="regDate" column="regDate"/>
		<result property="updateDate" column="updateDate"/>
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap>
	
	<resultMap type="org.zerock.domain.AuthVO" id="authMap">
		<result property="userid" column="userid"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<select id="read" resultMap="memberMap">
		SELECT 
		 	mem.userid, userpw, username, enabled, regdate, updatedate, auth
		 FROM
		 	member mem LEFT OUTER JOIN tbl_member_auth auth on mem.userid = auth.userid
		 WHERE 	
		 	mem.userid = #{userid}
	</select>
	<!-- id가 'read'인 <select>태그는 resultMap 속성을 지정한다. 지정된 'memberMap'은 아래와 같은 쿼리 결과를 처리한다 -->
	<!-- userid userpw username enabled regdate  updatedate auth 속성값들 출력-->
	<!-- 결과를 자세히 보면 오른쪽 끝의 'auth'의 값은 다르지만, 나머지 정보는 같은 것을 볼 수 있다 
		  즉 회원 정보는 MemberVO 하나이고, AuthVO는 2개가 되어야하는 결과이다. memberMap이라는 이름을 가지는 <resultMap>은
		 <result>와 <collection>을 이용해서 바깥쪽 객체(MemberVO의 인스턴스)와 안쪽 객체 (AuthVO의 인스턴스들)을 구성할 수 있다.
		 MyBatis에서는 이처럼 하나의 결과에 부가적으로 여러 개의 데이터를 처리하는 경우 1:N의 결과를 처리할 수 있는 <resultMap>태그를 지원한다. 
	-->
</mapper>